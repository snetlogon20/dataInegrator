@startuml

class RAGFactory {
  +Dict[str, Type[RAGAgent]] _registry
  +new_agent(agent_type: str, knowledge_base_file_path: str, prompt_file_path: str): RAGAgent
  +run_rag_inquiry(rag_model: str, agent_type: str, question: str, knowledge_base_file_path: str, prompt_file_path: str)
}

class RAGAgent {
  +run_single_question(agent_type: str, prompt: str): str
  +load_knowledge_base_from_json(file_path: str): dict
  +load_and_generate_prompts(prompt_file_path: str, context: str, question: str): str
  +call_ai_agent(agent_type: str, prompt: str, question: str)
}

class RAG_SQL_inquiry_stock_summary {
  +knowledge_base_file_path: str
  +prompt_file_path: str
  +__init__(knowledge_base_file_path: str, prompt_file_path: str)
  +run_single_question(agent_type: str, question: str): dict
  +run_prompt_questions()
  +display_result(response: dict, result_dict: dict)
}

class RAG_SQL_inquiry_stocks_code {
  +knowledge_base_file_path: str
  +prompt_file_path: str
  +__init__(knowledge_base_file_path: str, prompt_file_path: str)
  +run_single_question(agent_type: str, question: str): dict
  +run_prompt_questions()
  +display_result(response: dict, result_dict: dict)
}

RAGFactory --> RAGAgent : uses
RAGFactory --> RAG_SQL_inquiry_stock_summary : creates
RAGFactory --> RAG_SQL_inquiry_stocks_code : creates
RAG_SQL_inquiry_stock_summary --> RAGAgent : extends
RAG_SQL_inquiry_stocks_code --> RAGAgent : extends

@enduml
